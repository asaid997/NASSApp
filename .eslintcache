[{"/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/index.js":"1","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/reportWebVitals.js":"2","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/App.js":"3","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/snackbars.jsx":"4","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/Home.jsx":"5","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/MediaCard.jsx":"6","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/api-manager.js":"7","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/Search.jsx":"8","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/Favourites.jsx":"9","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/Favourite.jsx":"10"},{"size":500,"mtime":1609583953684,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1609583953685,"results":"13","hashOfConfig":"12"},{"size":3928,"mtime":1609746904116,"results":"14","hashOfConfig":"12"},{"size":501,"mtime":1609583953684,"results":"15","hashOfConfig":"12"},{"size":655,"mtime":1609747830463,"results":"16","hashOfConfig":"12"},{"size":3187,"mtime":1609747670804,"results":"17","hashOfConfig":"12"},{"size":608,"mtime":1609583953682,"results":"18","hashOfConfig":"12"},{"size":1696,"mtime":1609583953683,"results":"19","hashOfConfig":"12"},{"size":850,"mtime":1609583953682,"results":"20","hashOfConfig":"12"},{"size":460,"mtime":1609583953682,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1gypc80",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/index.js",[],["47","48"],"/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/reportWebVitals.js",[],"/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/App.js",["49","50"],"import React, { useEffect, useState } from 'react';\nimport './App.css'\nimport { Tabs, AppBar, Tab, Toolbar, Grid } from '@material-ui/core';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport CustomizedSnackbars from './components/snackbars';\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport apiManager from './api-manager'\nimport Favourites from './components/Favourites';\nimport Favourite from './components/Favourite';\n\n\n\nexport default function App() {\n  //snackBar \n  const [toShow, setToShow] = useState(false)\n  const [severity, setSeverity] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n\n  const alert = (s, t, ts) => {\n    setSeverity(s)\n    setMessage(t)\n    setToShow(ts)\n  }\n\n  const alertSuccess = msg => alert(\"success\", msg, true)\n  const alertError = msg => alert(\"error\", msg, true)\n\n  const handleClose = () => setToShow(false)\n  //snackBar \n\n\n  //tracker for liked posts\n  const [ifLiked, setIfLiked] = useState({})\n\n  //functions \n  const like = async post => {\n    const response = await apiManager.addPost(post)\n    if (response) {\n      alertSuccess(\"Succesfuly liked\")\n      fetchFavourites()\n    }\n    else alertError(\"Failure in saving post\")\n\n  }\n  const dislike = async id => {\n    const response = await apiManager.deletePost(id)\n    if (response) {\n      alertSuccess(\"Succesfuly disliked...\")\n      fetchFavourites()\n    }\n    else alertError(\"Failure in disliking post\")\n  }\n  //functions \n\n  //search\n  const [results, setResults] = useState([])\n  const searchProps = {\n    results: [results, setResults],\n    like,\n    dislike,\n    ifLiked\n  }\n  //search\n\n  //home\n  const [title, setTitle] = useState(\"\")\n  const [imageUrl, setImageUrl] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n\n  const homeProps = {\n    title: [title, setTitle],\n    image: [imageUrl, setImageUrl],\n    description: [description, setDescription],\n\n  }\n  //home\n\n\n  //Favourites\n  const [favourites, setFavourites] = useState([])\n  const [favShow, setFavShow] = useState([])\n  const favHandler = post => setFavShow(post)\n  const favouritesProps = {\n    favourites,\n    like,\n    dislike,\n    ifLiked,\n    favHandler\n  }\n  async function fetchFavourites() {\n    const favs = await apiManager.getPosts()\n    setFavourites(favs)\n  }\n  //Favourites\n\n\n  useEffect(() => {\n    const populateHomeData = async () => {\n      const data = await apiManager.APOD()\n      setTitle(data.data.title)\n      setImageUrl(data.data.url)\n      setDescription(data.data.explanation)\n    }\n\n    populateHomeData()\n    fetchFavourites()\n  }, [])\n\n  useEffect(() => {\n    const favs = {}\n    favourites.forEach(f => favs[f.id] = true)\n    setIfLiked(favs)\n  }, [favourites])\n\n\n  const [tab, setTab] = useState(0);\n  const handleChange = (event, newValue) => setTab(newValue)\n\n  return (\n    <div >\n      <Router>\n        <div>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <img id=\"logo\" src=\"https://www.nasa.gov/sites/all/themes/custom/nasatwo/images/nasa-logo.svg\" />\n              <Tabs value={tab} onChange={handleChange} >\n                <Tab component={Link} to={'/'} label=\"Home\" />\n                <Tab component={Link} to={'/search'} label=\"Search\" />\n                <Tab component={Link} to={'/favourites'} label=\"Favourites\" />\n              </Tabs>\n            </Toolbar>\n          </AppBar>\n          <Route path=\"/\" exact render={() => <Home {...homeProps} />} />\n          <Route path=\"/search\" exact render={() => <Search {...searchProps} />} />\n          <Route path=\"/favourites\" exact render={() => <Favourites {...favouritesProps} />} />\n          <Route path=\"/favourites/:id\" exact render={() => <Favourite favShow={favShow} />} />\n        </div>\n      </Router>\n      <CustomizedSnackbars severity={severity} toShow={toShow} message={message} handleClose={handleClose} />\n    </div>\n  );\n}\n","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/snackbars.jsx",[],"/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/Home.jsx",["51","52","53"],"/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/MediaCard.jsx",["54","55","56"],"/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/api-manager.js",["57"],"import axios from 'axios'\nconst key = \"4KF2rKFNdJveQHmJMauagz6e4IldVSyz9I9Z26DR\"\n\nexport default {\n\n    APOD: async () => await axios.get(`https://api.nasa.gov/planetary/apod?api_key=${key}`).then(data => data),\n    search: async query => await axios.get(`https://images-api.nasa.gov/search?q=${query}&media_type=image`).then(data => data),\n\n    addPost: async post => await axios.post(`http://localhost:3001/image`, post),\n    getPosts: async () => await axios.get(`http://localhost:3001/images`).then(data => data.data),\n    deletePost: async id => await axios.delete(`http://localhost:3001/image/${id}`)\n}","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/Search.jsx",["58"],"import React, { useState, useEffect } from 'react'\nimport { Input, Grid } from '@material-ui/core';\nimport apiManager from '../api-manager'\nimport MediaCard from './MediaCard'\n\n\nexport default function Search(props) {\n    const [search, setSearch] = useState(\"\")\n    const [results, setResults] = props.results\n    const [timer, setTimer] = useState(0)\n\n    const { like, dislike, ifLiked } = props\n    const functions = {\n        like,\n        dislike\n    }\n\n\n    const searchHandler = e => setSearch(e.target.value)\n\n    useEffect(() => {\n        clearTimeout(timer)\n        if (search !== \"\") {\n            setTimer(setTimeout(async () => {\n                const data = await apiManager.search(search)\n                setResults(data.data.collection.items)\n            }, 500))\n        }\n    }, [search])\n\n\n\n    const extractProps = result => {\n        const data = result.data[0]\n        const links = result.links[0]\n\n        const { nasa_id, title, description } = data\n        const { href } = links\n\n        return {\n            imageUrl: href,\n            id: nasa_id,\n            title,\n            description,\n            ifLiked: ifLiked[nasa_id]\n        }\n    }\n\n\n    return (\n        <div>\n            <Input id=\"search\" fullWidth={true} placeholder=\"Search space things\" onChange={searchHandler} />\n            <div id=\"container\">\n                <Grid container spacing={2}>\n                    {results.map(r =>\n                        <Grid key={r.nasa_id} item xs={12} md={4} lg={3}>\n                            <MediaCard height={400} {...extractProps(r)} {...functions} />\n                        </Grid>)}\n                </Grid>\n            </div>\n        </div>\n    )\n}\n","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/Favourites.jsx",["59"],"import React, { useEffect, useState } from 'react'\nimport { Grid, Divider } from '@material-ui/core';\nimport MediaCard from './MediaCard'\n\nexport default function Favourites(props) {\n    const { like, dislike, ifLiked, favourites, favHandler } = props\n    const [localFavs, setLocalFavs] = useState([])\n    const functions = {\n        like,\n        dislike\n    }\n\n    useEffect(() => {\n        setLocalFavs([...favourites].reverse())\n    }, [])\n\n\n    return (\n        <div id=\"container\">\n            <Divider />\n            <Grid container spacing={2}>\n                {localFavs.map(f =>\n                    <Grid key={f.id} item xs={12} md={4} lg={3}>\n                        <MediaCard height={400} {...f} {...functions} ifLiked={ifLiked[f.id]} favHandler={favHandler} />\n                    </Grid>)}\n            </Grid>\n        </div>\n\n    )\n}\n","/Users/asaid/Desktop/Excersize-Elevation/projects/nasapp/src/components/Favourite.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":3,"column":38,"nodeType":"66","messageId":"67","endLine":3,"endColumn":42},{"ruleId":"68","severity":1,"message":"69","line":126,"column":15,"nodeType":"70","endLine":126,"endColumn":112},{"ruleId":"64","severity":1,"message":"71","line":6,"column":17,"nodeType":"66","messageId":"67","endLine":6,"endColumn":25},{"ruleId":"64","severity":1,"message":"72","line":7,"column":20,"nodeType":"66","messageId":"67","endLine":7,"endColumn":31},{"ruleId":"64","severity":1,"message":"73","line":8,"column":23,"nodeType":"66","messageId":"67","endLine":8,"endColumn":37},{"ruleId":"64","severity":1,"message":"74","line":2,"column":53,"nodeType":"66","messageId":"67","endLine":2,"endColumn":63},{"ruleId":"64","severity":1,"message":"75","line":2,"column":101,"nodeType":"66","messageId":"67","endLine":2,"endColumn":111},{"ruleId":"76","severity":1,"message":"77","line":24,"column":8,"nodeType":"78","endLine":24,"endColumn":10,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":1,"nodeType":"82","endLine":12,"endColumn":2},{"ruleId":"76","severity":1,"message":"83","line":29,"column":8,"nodeType":"78","endLine":29,"endColumn":16,"suggestions":"84"},{"ruleId":"76","severity":1,"message":"85","line":15,"column":8,"nodeType":"78","endLine":15,"endColumn":10,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setTitle' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'IconButton' is defined but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'withDescription'. Either include it or remove the dependency array.","ArrayExpression",["89"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'setResults' and 'timer'. Either include them or remove the dependency array.",["90"],"React Hook useEffect has a missing dependency: 'favourites'. Either include it or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [withDescription]",{"range":"98","text":"99"},"Update the dependencies array to be: [search, setResults, timer]",{"range":"100","text":"101"},"Update the dependencies array to be: [favourites]",{"range":"102","text":"103"},[901,903],"[withDescription]",[798,806],"[search, setResults, timer]",[441,443],"[favourites]"]